---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: system

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat
  namespace: system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: filebeat
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: system
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: system
  labels:
    k8s-app: filebeat-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: filebeat-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: filebeat
      serviceAccountName: filebeat
      containers:
        - name: filebeat
          image: filebeat:v2
          env:
            - name: NODENAME
              valueFrom:
                 fieldRef:
                    fieldPath: spec.nodeName
          command:
            - bash
            - -c
            - |
              while IFS='' read -r line || [[ -n "$line" ]]; 
              do
                IFS='//' read -r -a array1 <<< "$line";
                a="/mnt/root";
                for i in ${!array1[@]};
                do
                    if [ $i -ne 0 ];
                    then
                        a="$a/${array1[$i]}";
                    fi;
                done;
                a="$a/containers";
                export DOCKERPATH=$a;
                export NODENAME=${NODENAME}
                sed -i -e 's@DOCKERPATH@'"$DOCKERPATH"'@' filebeat.yml;
                sed -i -e 's@NODENAME@'"$NODENAME"'@' filebeat.yml;
              done < "/tmp/dockerstorage/dockerpath.txt";
              chown root:filebeat /usr/share/filebeat/filebeat.yml
              ./filebeat -e;
          volumeMounts:
            - name: varlibdockercontainers
              mountPath: /mnt/root
              readOnly: true
            - name: tmp
              mountPath: /tmp/dockerstorage
      initContainers:
        - name: logpath
          image: docker:18.09
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
               dockvol=$(docker info | grep Docker);
               echo $dockvol > /tmp/dockerstorage/dockerpath.txt;
          volumeMounts:
            - name: tmp
              mountPath: /tmp/dockerstorage
            - name: dockersock
              mountPath: /var/run/docker.sock
      volumes:
        - name: varlibdockercontainers
          hostPath:
             path: /
        - name: tmp
          emptyDir: {}
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
