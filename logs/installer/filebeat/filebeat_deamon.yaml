---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config1
  namespace: test
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.config:
      inputs:
        path: ${path.config}/inputs.d/*.yml
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        reload.enabled: false

    filebeat.autodiscover:
      providers:
        - type: kubernetes
          templates:
            - condition:
                or:
                  - and:
                       - equals:
                            kubernetes.container.name: tensorflow
                       - equals:
                            kubernetes.labels.logger: filebeat
                       - equals:
                           kubernetes.node.name: NODENAME
                  - and:
                       - equals:
                           kubernetes.labels.app: dkube
                       - equals:
                           kubernetes.node.name: NODENAME

              config:
                - type: docker
                  containers:
                    path: "DOCKERPATH"
                    ids:
                      - "${data.kubernetes.container.id}"
          fields:
            Jobid: ${data.kubernetes.labels.tf_job_name}
            Role: ${data.kubernetes.labels.tf-replica-type:SINGLETON}
          fields_under_root: true
          
    processors:
       - drop_fields:
             fields: ["beat", "input", "prospector", "offset", "source", "labels", "host", "kubernetes", "pod", "container", "node", "tags", "@version"]

    output.logstash:
         hosts: ["logstash.test:5044"]
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: test
  labels:
    k8s-app: filebeat
spec:
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.0.0-alpha2
        env:
         - name: NODENAME
           valueFrom:
             fieldRef:
                fieldPath: spec.nodeName
        command:
            - bash
            - -c
            - |
              > filebeat.yml
              cat /etc/config_data/filebeat.yml >> /usr/share/filebeat/filebeat.yml
              while IFS='' read -r line || [[ -n "$line" ]];
              do
                IFS='//' read -r -a array1 <<< "$line";
                a="/mnt/root";
                for i in ${!array1[@]};
                do
                    if [ $i -ne 0 ];
                    then
                        a="$a/${array1[$i]}";
                    fi;
                done;
                a="$a/containers";
                export DOCKERPATH=$a;
                export NODENAME=${NODENAME}
                sed -i -e 's@DOCKERPATH@'"$DOCKERPATH"'@' filebeat.yml;
                sed -i -e 's@NODENAME@'"$NODENAME"'@' filebeat.yml;
              done < "/tmp/dockerstorage/dockerpath.txt";
              ./filebeat modules enable logstash
              ./filebeat -e;
        securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
        volumeMounts:
        - name: config
          mountPath: /etc/config_data
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /mnt/root
          readOnly: true
        - name: tmp
          mountPath: /tmp/dockerstorage
      initContainers:
        - name: logpath
          image: docker:18.09
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
               dockvol=$(docker info | grep Docker);
               echo $dockvol > /tmp/dockerstorage/dockerpath.txt;
          volumeMounts:
            - name: tmp
              mountPath: /tmp/dockerstorage
            - name: dockersock
              mountPath: /var/run/docker.sock
      volumes:
        - name: varlibdockercontainers
          hostPath:
             path: /
        - name: tmp
          emptyDir: {}
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: config
          configMap:
            defaultMode: 0600
            name: filebeat-config1
      
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: test
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: test
  labels:
    k8s-app: filebeat
---
